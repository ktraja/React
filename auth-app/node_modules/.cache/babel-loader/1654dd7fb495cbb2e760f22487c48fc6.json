{"ast":null,"code":"var _jsxFileName = \"/home/vhitech/Raja/React/auth-app/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useContext } from \"react\";\nimport AppContext from \"../store/app-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [loginError, setLoginError] = useState();\n  const enteredEmailRef = useRef();\n  const enteredPasswordRef = useRef();\n  const appCxt = useContext(AppContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const loginFunc = async (loginUrl, apiKey) => {\n      const response = await fetch(loginUrl + apiKey, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmailRef.current.value,\n          password: enteredPasswordRef.current.value,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        setLoginError(data.error.message);\n        return loginError;\n      } else {\n        appCxt.login(data.idToken);\n        setLoginError();\n      }\n    };\n\n    if (isLogin) {\n      const loginUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\n      const apiKey = \"AIzaSyAyiztGYac7IMAWvQhXrnNorIWTnRiSu_M\";\n      loginFunc(loginUrl, apiKey);\n    } else {\n      const loginUrl = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\n      const apiKey = \"AIzaSyAyiztGYac7IMAWvQhXrnNorIWTnRiSu_M\";\n      loginFunc(loginUrl, apiKey);\n    }\n  };\n\n  if (appCxt.isLoggedIn) {\n    history.replace(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: enteredEmailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: enteredPasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"yzrDNSWFGqLSvo+XADmhPJe9NAw=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/vhitech/Raja/React/auth-app/src/components/Auth/AuthForm.js"],"names":["useRef","useState","useContext","AppContext","classes","AuthForm","isLogin","setIsLogin","loginError","setLoginError","enteredEmailRef","enteredPasswordRef","appCxt","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","loginFunc","loginUrl","apiKey","response","fetch","method","body","JSON","stringify","email","current","value","password","returnSecureToken","headers","data","json","ok","error","message","login","idToken","isLoggedIn","history","replace","auth","control","actions","toggle"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAMS,eAAe,GAAGV,MAAM,EAA9B;AACA,QAAMW,kBAAkB,GAAGX,MAAM,EAAjC;AACA,QAAMY,MAAM,GAAGV,UAAU,CAACC,UAAD,CAAzB;;AAEA,QAAMU,qBAAqB,GAAG,MAAM;AAClCN,IAAAA,UAAU,CAAEO,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,UAAMC,SAAS,GAAG,OAAOC,QAAP,EAAiBC,MAAjB,KAA4B;AAC5C,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAGC,MAAZ,EAAoB;AAC9CG,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEjB,eAAe,CAACkB,OAAhB,CAAwBC,KADZ;AAEnBC,UAAAA,QAAQ,EAAEnB,kBAAkB,CAACiB,OAAnB,CAA2BC,KAFlB;AAGnBE,UAAAA,iBAAiB,EAAE;AAHA,SAAf,CAFwC;AAO9CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAPqC,OAApB,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAnB;;AAEA,UAAI,CAACb,QAAQ,CAACc,EAAd,EAAkB;AAChB1B,QAAAA,aAAa,CAACwB,IAAI,CAACG,KAAL,CAAWC,OAAZ,CAAb;AACA,eAAO7B,UAAP;AACD,OAHD,MAGO;AACLI,QAAAA,MAAM,CAAC0B,KAAP,CAAaL,IAAI,CAACM,OAAlB;AACA9B,QAAAA,aAAa;AACd;AACF,KAnBD;;AAqBA,QAAIH,OAAJ,EAAa;AACX,YAAMa,QAAQ,GACZ,4EADF;AAEA,YAAMC,MAAM,GAAG,yCAAf;AACAF,MAAAA,SAAS,CAACC,QAAD,EAAWC,MAAX,CAAT;AACD,KALD,MAKO;AACL,YAAMD,QAAQ,GACZ,gEADF;AAEA,YAAMC,MAAM,GAAG,yCAAf;AACAF,MAAAA,SAAS,CAACC,QAAD,EAAWC,MAAX,CAAT;AACD;AACF,GAnCD;;AAqCA,MAAIR,MAAM,CAAC4B,UAAX,EAAuB;AACrBC,IAAAA,OAAO,CAACC,OAAR,CAAgB,GAAhB;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEtC,OAAO,CAACuC,IAA5B;AAAA,4BACE;AAAA,gBAAKrC,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAES,aAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACwC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,MAAvC;AAAwC,UAAA,GAAG,EAAElC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACwC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,GAAG,EAAEjC;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA,oBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAeE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACyC,OAAxB;AAAA,gCACE;AAAA,oBAASvC,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEF,OAAO,CAAC0C,MAFrB;AAGE,UAAA,OAAO,EAAEjC,qBAHX;AAAA,oBAKGP,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAnFD;;GAAMD,Q;;KAAAA,Q;AAqFN,eAAeA,QAAf","sourcesContent":["import { useRef, useState, useContext } from \"react\";\nimport AppContext from \"../store/app-context\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [loginError, setLoginError] = useState();\n  const enteredEmailRef = useRef();\n  const enteredPasswordRef = useRef();\n  const appCxt = useContext(AppContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const loginFunc = async (loginUrl, apiKey) => {\n      const response = await fetch(loginUrl + apiKey, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmailRef.current.value,\n          password: enteredPasswordRef.current.value,\n          returnSecureToken: true,\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        setLoginError(data.error.message);\n        return loginError;\n      } else {\n        appCxt.login(data.idToken);\n        setLoginError();\n      }\n    };\n\n    if (isLogin) {\n      const loginUrl =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\n      const apiKey = \"AIzaSyAyiztGYac7IMAWvQhXrnNorIWTnRiSu_M\";\n      loginFunc(loginUrl, apiKey);\n    } else {\n      const loginUrl =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\n      const apiKey = \"AIzaSyAyiztGYac7IMAWvQhXrnNorIWTnRiSu_M\";\n      loginFunc(loginUrl, apiKey);\n    }\n  };\n\n  if (appCxt.isLoggedIn) {\n    history.replace(\"/\");\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={enteredEmailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={enteredPasswordRef}\n          />\n          <p>{loginError}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}