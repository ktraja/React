{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","components/lib.js","components/use-http.js","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","dbUrl","addQuote","newQuote","a","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","getAllQuotes","key","formattedData","dataObj","id","push","getSingleQuote","quoteId","addComment","commentData","commentId","comment","getComments","key1","commentArray","key2","text","httpReducer","state","action","type","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","MainNavigation","header","div","nav","to","active","Layout","props","main","children","QuoteItem","item","author","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedList","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","AllQuotes","useEffect","NewQuote","React","lazy","NotFound","QuoteDetail","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1829086.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","const dbUrl =\n  \"https://reactdb-6ad6e-default-rtdb.asia-southeast1.firebasedatabase.app\";\n\nexport const addQuote = async (newQuote) => {\n  const response = await fetch(dbUrl + \"/quotes.json\", {\n    method: \"POST\",\n    body: JSON.stringify(newQuote),\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create new Quote\");\n  }\n  return null;\n};\n\nexport const getAllQuotes = async () => {\n  const response = await fetch(dbUrl + \"/quotes.json\");\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get Quotes\");\n  }\n\n  const formattedData = [];\n  for (const key in data) {\n    const dataObj = {\n      id: key,\n      ...data[key],\n    };\n    formattedData.push(dataObj);\n  }\n  return formattedData;\n};\n\nexport const getSingleQuote = async (quoteId) => {\n  const response = await fetch(dbUrl + \"/quotes/\" + quoteId + \".json\");\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Not able to retrieve Quote.\");\n  }\n  return data;\n};\n\nexport const addComment = async (commentData) => {\n  const response = await fetch(\n    dbUrl + \"/quotes/\" + commentData.quoteId + \".json\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        commentId: commentData.commentId,\n        comment: commentData.comment,\n      }),\n      headers: { \"Application-Type\": \"text-json\" },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Not able to add Comment.\");\n  }\n};\n\nexport const getComments = async (quoteId) => {\n  const response = await fetch(dbUrl + \"/quotes/\" + quoteId + \".json\");\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Not able to get Comments.\");\n  }\n\n  const commentArray = [];\n\n  for (const key1 in data) {\n    if ((key1 !== \"author\") & (key1 !== \"text\")) {\n      for (const key2 in data[key1]) {\n        commentArray.push({ id: key1, text: data[key1][key2] });\n      }\n    }\n  }\n  return commentArray;\n};\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something Went Wrong\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n  return { sendRequest, ...httpState };\n}\n\nexport default useHttp;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","import classes from \"./MainNavigation.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.div}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" className={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/addquote\" className={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react/cjs/react.production.min\";\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedList = sortQuotes(props.quotes, isSortingAscending);\n\n  const sortHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"des\" : \"asc\"}`,\n    });\n\n    history.push(\n      `${location.pathname}?sort=${isSortingAscending ? \"des\" : \"asc\"}`\n    );\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedList.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSppinner from \"../components/UI/LoadingSpinner\";\nimport { getAllQuotes } from \"../components/lib\";\nimport useHttp from \"../components/use-http\";\nimport { useEffect } from \"react\";\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSppinner />\n      </div>\n    );\n  }\n\n  return <QuoteList quotes={data} />;\n};\nexport default AllQuotes;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport AllQuotes from \"./pages/AllQuotes\";\n\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/addquote\">\n            <NewQuote />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}