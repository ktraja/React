{"version":3,"sources":["pages/NotFound.js","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["NotFound","className","module","exports","NewCommentForm","props","commentTextRef","useRef","param","useParams","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","commentData","quoteId","comment","current","value","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","text","CommentsList","comments","map","Comments","useState","isAddingComment","setIsAddingComment","getComments","data","commentAddHandler","useCallback","onClick","length","tst","HighlightedQuote","quote","author","QuoteDetail","getSingleQuote","match","useRouteMatch","path","exact","to","url"],"mappings":"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","file":"static/js/3.dfa2571d.chunk.js","sourcesContent":["const NotFound = () => {\n  return <div className=\"centered\">Page not Found!</div>;\n};\n\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { useRef, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../use-http\";\nimport { addComment } from \"../lib\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const param = useParams();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const commentData = {\n      quoteId: param.quoteId,\n      comment: commentTextRef.current.value,\n    };\n    sendRequest(commentData);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useState, useCallback } from \"react\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getComments } from \"../lib\";\nimport useHttp from \"../use-http\";\nimport { useParams } from \"react-router\";\nimport CommentsList from \"./CommentsList\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, data, status } = useHttp(getComments);\n  const param = useParams();\n  const { quoteId } = param;\n\n  const commentAddHandler = useCallback(() => {\n    sendRequest(quoteId);\n    setIsAddingComment(false);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  function tst() {\n    let comments;\n    if (status === \"pending\") {\n      comments = (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      );\n    }\n    if (status === \"completed\" && data && data.length > 0) {\n      comments = <CommentsList comments={data} />;\n    }\n    if (status === \"completed\" && (!data || data.length === 0)) {\n      comments = <p>No Comments added Yet.Be the first to Comment.</p>;\n    }\n    return comments;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddedComment={commentAddHandler} />}\n      {tst()}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { Route, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NotFound from \"./NotFound\";\nimport useHttp from \"../components/use-http\";\nimport { getSingleQuote } from \"../components/lib\";\n\n// const DummyList = [\n//   { id: \"1\", author: \"Raja\", text: \"To be or not to be?\" },\n//   { id: \"2\", author: \"Shakespear\", text: \"All the world is a stage\" },\n// ];\n\nconst QuoteDetail = () => {\n  const { sendRequest, data: quote } = useHttp(getSingleQuote);\n\n  const match = useRouteMatch();\n  const param = useParams();\n\n  useEffect(() => {\n    sendRequest(param.quoteId);\n  }, [sendRequest, param.quoteId]);\n\n  if (!quote) {\n    return <NotFound />;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}