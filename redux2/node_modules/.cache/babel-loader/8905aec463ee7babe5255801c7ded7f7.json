{"ast":null,"code":"import { createStore } from \"redux\"; // const initialState = { toggleCart: false };\n\nconst uiReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    toggleCart: true\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"toggle\") {\n    return {\n      toggleCart: !state.toggleCart\n    };\n  }\n\n  return state;\n}; // const cartReducer = (state = { items: [], totQty: 0, totAmt: 0 }, action) => {\n//   console.log(action);\n//   if (action.type === \"additem\") {\n//     let cartItems = state.items;\n//     let cartTotQty = state.totQty;\n//     let cartTotAmt = state.totAmt;\n//     const newItem = action.item;\n//     const existingItem = cartItems.find((item) => item.id === newItem.id);\n//     if (!existingItem) {\n//       cartItems.push({\n//         itemId: newItem.id,\n//         name: newItem.name,\n//         price: newItem.price,\n//         qty: 1,\n//       });\n//     } else {\n//       existingItem.qty++;\n//     }\n//     cartTotAmt = cartTotAmt + newItem.price;\n//     cartTotQty = cartTotQty + 1;\n//     return { items: cartItems, totQty: cartTotQty, totAmt: cartTotAmt };\n//   }\n//   if (action.type === \"delitem\") {\n//     let cartItems = state.items;\n//     let cartTotQty = state.totQty;\n//     let cartTotAmt = state.totAmt;\n//     const newItem = action.item;\n//     const existingItem = cartItems.find((item) => item.id === newItem.id);\n//     if (existingItem.qty === 1) {\n//       cartItems = cartItems.filter((item) => item.id !== newItem.id);\n//     } else {\n//       existingItem.qty--;\n//     }\n//     cartTotAmt = cartTotAmt - newItem.price;\n//     cartTotQty = cartTotQty - 1;\n//     return { items: cartItems, totQty: cartTotQty, totAmt: cartTotAmt };\n//   }\n//   return state;\n// };\n\n\nconst uiStore = createStore(uiReducer); // export const cartStore = createStore(cartReducer);\n\nexport default uiStore;","map":{"version":3,"sources":["/home/vhitech/Raja/React/redux2/src/Store/store.js"],"names":["createStore","uiReducer","state","toggleCart","action","type","uiStore"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,MAAMC,SAAS,GAAG,YAA0C;AAAA,MAAzCC,KAAyC,uEAAjC;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAiC;AAAA,MAAXC,MAAW;;AAC1D,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AAAEF,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AAArB,KAAP;AACD;;AACD,SAAOD,KAAP;AACD,CALD,C,CAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMI,OAAO,GAAGN,WAAW,CAACC,SAAD,CAA3B,C,CACA;;AAEA,eAAeK,OAAf","sourcesContent":["import { createStore } from \"redux\";\n\n// const initialState = { toggleCart: false };\nconst uiReducer = (state = { toggleCart: true }, action) => {\n  if (action.type === \"toggle\") {\n    return { toggleCart: !state.toggleCart };\n  }\n  return state;\n};\n\n// const cartReducer = (state = { items: [], totQty: 0, totAmt: 0 }, action) => {\n//   console.log(action);\n\n//   if (action.type === \"additem\") {\n//     let cartItems = state.items;\n//     let cartTotQty = state.totQty;\n//     let cartTotAmt = state.totAmt;\n\n//     const newItem = action.item;\n//     const existingItem = cartItems.find((item) => item.id === newItem.id);\n//     if (!existingItem) {\n//       cartItems.push({\n//         itemId: newItem.id,\n//         name: newItem.name,\n//         price: newItem.price,\n//         qty: 1,\n//       });\n//     } else {\n//       existingItem.qty++;\n//     }\n//     cartTotAmt = cartTotAmt + newItem.price;\n//     cartTotQty = cartTotQty + 1;\n\n//     return { items: cartItems, totQty: cartTotQty, totAmt: cartTotAmt };\n//   }\n\n//   if (action.type === \"delitem\") {\n//     let cartItems = state.items;\n//     let cartTotQty = state.totQty;\n//     let cartTotAmt = state.totAmt;\n\n//     const newItem = action.item;\n//     const existingItem = cartItems.find((item) => item.id === newItem.id);\n\n//     if (existingItem.qty === 1) {\n//       cartItems = cartItems.filter((item) => item.id !== newItem.id);\n//     } else {\n//       existingItem.qty--;\n//     }\n//     cartTotAmt = cartTotAmt - newItem.price;\n//     cartTotQty = cartTotQty - 1;\n\n//     return { items: cartItems, totQty: cartTotQty, totAmt: cartTotAmt };\n//   }\n//   return state;\n// };\n\nconst uiStore = createStore(uiReducer);\n// export const cartStore = createStore(cartReducer);\n\nexport default uiStore;\n"]},"metadata":{},"sourceType":"module"}