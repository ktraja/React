{"ast":null,"code":"import { combineReducers, createStore } from \"redux\"; // const initialState = { toggleCart: false };\n\nconst uiReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    toggleCart: true\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"toggle\") {\n    return {\n      toggleCart: !state.toggleCart\n    };\n  }\n\n  return state;\n};\n\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: [],\n    totQty: 0,\n    totAmt: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"additem\") {\n    let cartItems = state.items;\n    let cartTotQty = state.totQty;\n    let cartTotAmt = state.totAmt;\n    console.log(cartItems);\n    const newItem = action.item;\n    console.log(newItem);\n    const existingItem = cartItems.find(item => item.id === newItem.id);\n\n    if (!existingItem) {\n      cartItems.push({\n        id: newItem.id,\n        title: newItem.title,\n        price: newItem.price,\n        quantity: 1\n      });\n    } else {\n      existingItem.quantity++;\n    }\n\n    cartTotAmt = cartTotAmt + newItem.price;\n    cartTotQty = cartTotQty + 1;\n    return {\n      items: cartItems,\n      totQty: cartTotQty,\n      totAmt: cartTotAmt\n    };\n  }\n\n  if (action.type === \"delitem\") {\n    let cartItems = state.items;\n    let cartTotQty = state.totQty;\n    let cartTotAmt = state.totAmt;\n    const newItem = action.item;\n    const existingItem = cartItems.find(item => item.id === newItem.id);\n\n    if (existingItem.qty === 1) {\n      cartItems = cartItems.filter(item => item.id !== newItem.id);\n    } else {\n      existingItem.quantity--;\n    }\n\n    cartTotAmt = cartTotAmt - newItem.price;\n    cartTotQty = cartTotQty - 1;\n    return {\n      items: cartItems,\n      totQty: cartTotQty,\n      totAmt: cartTotAmt\n    };\n  }\n\n  return state;\n};\n\nconst rootReducer = combineReducers({\n  uiReducer,\n  cartReducer\n});\nconst store = createStore(rootReducer);\nexport default store;","map":{"version":3,"sources":["/home/vhitech/Raja/React/redux2/src/Store/store.js"],"names":["combineReducers","createStore","uiReducer","state","toggleCart","action","type","cartReducer","items","totQty","totAmt","cartItems","cartTotQty","cartTotAmt","console","log","newItem","item","existingItem","find","id","push","title","price","quantity","qty","filter","rootReducer","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C,C,CAEA;;AACA,MAAMC,SAAS,GAAG,YAA0C;AAAA,MAAzCC,KAAyC,uEAAjC;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAiC;AAAA,MAAXC,MAAW;;AAC1D,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AAAEF,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AAArB,KAAP;AACD;;AACD,SAAOD,KAAP;AACD,CALD;;AAOA,MAAMI,WAAW,GAAG,YAAyD;AAAA,MAAxDJ,KAAwD,uEAAhD;AAAEK,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE,CAArB;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAAgD;AAAA,MAAXL,MAAW;;AAC3E,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,QAAIK,SAAS,GAAGR,KAAK,CAACK,KAAtB;AACA,QAAII,UAAU,GAAGT,KAAK,CAACM,MAAvB;AACA,QAAII,UAAU,GAAGV,KAAK,CAACO,MAAvB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,UAAMK,OAAO,GAAGX,MAAM,CAACY,IAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,UAAME,YAAY,GAAGP,SAAS,CAACQ,IAAV,CAAgBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYJ,OAAO,CAACI,EAA7C,CAArB;;AAEA,QAAI,CAACF,YAAL,EAAmB;AACjBP,MAAAA,SAAS,CAACU,IAAV,CAAe;AACbD,QAAAA,EAAE,EAAEJ,OAAO,CAACI,EADC;AAEbE,QAAAA,KAAK,EAAEN,OAAO,CAACM,KAFF;AAGbC,QAAAA,KAAK,EAAEP,OAAO,CAACO,KAHF;AAIbC,QAAAA,QAAQ,EAAE;AAJG,OAAf;AAMD,KAPD,MAOO;AACLN,MAAAA,YAAY,CAACM,QAAb;AACD;;AACDX,IAAAA,UAAU,GAAGA,UAAU,GAAGG,OAAO,CAACO,KAAlC;AACAX,IAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AAEA,WAAO;AAAEJ,MAAAA,KAAK,EAAEG,SAAT;AAAoBF,MAAAA,MAAM,EAAEG,UAA5B;AAAwCF,MAAAA,MAAM,EAAEG;AAAhD,KAAP;AACD;;AAED,MAAIR,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,QAAIK,SAAS,GAAGR,KAAK,CAACK,KAAtB;AACA,QAAII,UAAU,GAAGT,KAAK,CAACM,MAAvB;AACA,QAAII,UAAU,GAAGV,KAAK,CAACO,MAAvB;AAEA,UAAMM,OAAO,GAAGX,MAAM,CAACY,IAAvB;AACA,UAAMC,YAAY,GAAGP,SAAS,CAACQ,IAAV,CAAgBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYJ,OAAO,CAACI,EAA7C,CAArB;;AAEA,QAAIF,YAAY,CAACO,GAAb,KAAqB,CAAzB,EAA4B;AAC1Bd,MAAAA,SAAS,GAAGA,SAAS,CAACe,MAAV,CAAkBT,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYJ,OAAO,CAACI,EAA/C,CAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,YAAY,CAACM,QAAb;AACD;;AACDX,IAAAA,UAAU,GAAGA,UAAU,GAAGG,OAAO,CAACO,KAAlC;AACAX,IAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AAEA,WAAO;AAAEJ,MAAAA,KAAK,EAAEG,SAAT;AAAoBF,MAAAA,MAAM,EAAEG,UAA5B;AAAwCF,MAAAA,MAAM,EAAEG;AAAhD,KAAP;AACD;;AACD,SAAOV,KAAP;AACD,CA/CD;;AAiDA,MAAMwB,WAAW,GAAG3B,eAAe,CAAC;AAAEE,EAAAA,SAAF;AAAaK,EAAAA;AAAb,CAAD,CAAnC;AACA,MAAMqB,KAAK,GAAG3B,WAAW,CAAC0B,WAAD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\n\n// const initialState = { toggleCart: false };\nconst uiReducer = (state = { toggleCart: true }, action) => {\n  if (action.type === \"toggle\") {\n    return { toggleCart: !state.toggleCart };\n  }\n  return state;\n};\n\nconst cartReducer = (state = { items: [], totQty: 0, totAmt: 0 }, action) => {\n  if (action.type === \"additem\") {\n    let cartItems = state.items;\n    let cartTotQty = state.totQty;\n    let cartTotAmt = state.totAmt;\n\n    console.log(cartItems);\n\n    const newItem = action.item;\n    console.log(newItem);\n    const existingItem = cartItems.find((item) => item.id === newItem.id);\n\n    if (!existingItem) {\n      cartItems.push({\n        id: newItem.id,\n        title: newItem.title,\n        price: newItem.price,\n        quantity: 1,\n      });\n    } else {\n      existingItem.quantity++;\n    }\n    cartTotAmt = cartTotAmt + newItem.price;\n    cartTotQty = cartTotQty + 1;\n\n    return { items: cartItems, totQty: cartTotQty, totAmt: cartTotAmt };\n  }\n\n  if (action.type === \"delitem\") {\n    let cartItems = state.items;\n    let cartTotQty = state.totQty;\n    let cartTotAmt = state.totAmt;\n\n    const newItem = action.item;\n    const existingItem = cartItems.find((item) => item.id === newItem.id);\n\n    if (existingItem.qty === 1) {\n      cartItems = cartItems.filter((item) => item.id !== newItem.id);\n    } else {\n      existingItem.quantity--;\n    }\n    cartTotAmt = cartTotAmt - newItem.price;\n    cartTotQty = cartTotQty - 1;\n\n    return { items: cartItems, totQty: cartTotQty, totAmt: cartTotAmt };\n  }\n  return state;\n};\n\nconst rootReducer = combineReducers({ uiReducer, cartReducer });\nconst store = createStore(rootReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}